server:
  port: 8080
  servlet:
    context-path: /api
spring:
# ===============================
# = DATA SOURCE
# ===============================
# If you want to use mysql, you could uncomment line below.
# And use the mysql dependency in the 'build.gradle'.
# Set here configurations for the database connection
  datasource:    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/parameta?zeroDateTimeBehavior=convertToNull&serverTimezone
    username: dev
    password: dev
    hikari:
      connection-test-query: SELECT 1
# Keep the connection alive if idle for a long time (needed in production)

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use 'spring.jpa.properties.*' for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
  jpa:
    show-sql: false
# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5Dialect 